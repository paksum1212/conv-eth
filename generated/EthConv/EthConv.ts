// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewEthConv extends ethereum.Event {
  get params(): NewEthConv__Params {
    return new NewEthConv__Params(this);
  }
}

export class NewEthConv__Params {
  _event: NewEthConv;

  constructor(event: NewEthConv) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class UpdatedEthConv extends ethereum.Event {
  get params(): UpdatedEthConv__Params {
    return new UpdatedEthConv__Params(this);
  }
}

export class UpdatedEthConv__Params {
  _event: UpdatedEthConv;

  constructor(event: UpdatedEthConv) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class EthConv extends ethereum.SmartContract {
  static bind(address: Address): EthConv {
    return new EthConv("EthConv", address);
  }

  ethConv(param0: BigInt): Address {
    let result = super.call("ethConv", "ethConv(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_ethConv(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ethConv", "ethConv(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}
